; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#ifndef BuildNumber
#define BuildNumber 100
#endif

#define SourceDir "..\build\Release"
#define TargetDir "{pf}\Topten Software\Win3mu"
#define DefaultExe "{pf}\Topten Software\Win3mu\Win3mu.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{6216f646-0326-4aca-89fa-5530e1c2906f}
AppName=Win3mu
AppVersion=0.1
AppPublisher=Topten Software
AppPublisherURL=http://www.toptensoftware.com
AppSupportURL=http://www.toptensoftware.com
AppUpdatesURL=http://www.toptensoftware.com
ArchitecturesInstallIn64BitMode=x64
DefaultDirName={#TargetDir}
DisableDirPage=yes
DefaultGroupName=Win3mu
DisableProgramGroupPage=yes
OutputBaseFilename=SetupWin3mu-{#BuildNumber}
OutputDir=..\build\Setups
SetupIconFile=..\Win3mu\Icon.ico
Compression=lzma
SolidCompression=yes
WizardImageFile=..\Artwork\WizardImage.bmp
WizardImageStretch=yes
WizardSmallImageFile=..\Artwork\Icon55.bmp
UninstallDisplayIcon={#DefaultExe}
UninstallDisplayName=Win3mu
MinVersion=0,5.1.2600sp3

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "{#SourceDir}\obfuscated\Win3muRuntime.dll"; DestDir: "{#TargetDir}"; Flags: ignoreversion;
Source: "{#SourceDir}\obfuscated\Win3muTool.exe"; DestDir: "{#TargetDir}"; Flags: ignoreversion;
Source: "{#SourceDir}\obfuscated\Win3muProxy.exe"; DestDir: "{#TargetDir}"; Flags: ignoreversion;
Source: "{#SourceDir}\obfuscated\Win3mu.exe"; DestDir: "{#TargetDir}"; Flags: ignoreversion;
Source: "{#SourceDir}\obfuscated\config.json"; DestDir: "{#TargetDir}"; Flags: ignoreversion;

; common
Source: ".\dotNetFx40_Client_setup.exe"; DestDir: {tmp}; Flags: deleteafterinstall; Check: not IsRequiredDotNetDetected 
; NOTE: Don't use "Flags: ignoreversion" on any shared system files


[Run]
Filename: "{tmp}\dotNetFx40_Client_setup.exe"; Parameters: "/q /norestart"; Check: not IsRequiredDotNetDetected; StatusMsg: Microsoft Framework 4.0 is beïng installed. Please wait, might take a while...
Filename: "{code:GetV4NetDir}ngen.exe"; Parameters: "install ""{#TargetDir}\Win3muRuntime.dll"""; StatusMsg: Creating native images (ngen)...; Flags: runhidden;
Filename: "{code:GetV4NetDir}ngen.exe"; Parameters: "install ""{#TargetDir}\Win3muTool.exe"""; StatusMsg: Creating native images (ngen)...; Flags: runhidden;
Filename: "{code:GetV4NetDir}ngen.exe"; Parameters: "install ""{#TargetDir}\Win3muProxy.exe"""; StatusMsg: Creating native images (ngen)...; Flags: runhidden;
Filename: "{code:GetV4NetDir}ngen.exe"; Parameters: "install ""{#TargetDir}\Win3mu.exe"""; StatusMsg: Creating native images (ngen)...; Flags: runhidden;
Filename: "{#TargetDir}\Win3muTool.exe"; Parameters: "/register"; StatusMsg: Setting up shell integration...; Flags: runhidden;

[UninstallRun]
Filename: "{#TargetDir}\Win3muTool.exe"; Parameters: "/unregister"; StatusMsg: Removing shell integration...; Flags: runhidden;
Filename: {code:GetV4NetDir}ngen.exe; Parameters: "uninstall ""{#TargetDir}\Win3mu.exe"""; StatusMsg: Removing native images...; Flags: runhidden;
Filename: {code:GetV4NetDir}ngen.exe; Parameters: "uninstall ""{#TargetDir}\Win3muProxy.exe"""; StatusMsg: Removing native images...; Flags: runhidden;
Filename: {code:GetV4NetDir}ngen.exe; Parameters: "uninstall ""{#TargetDir}\Win3muTool.exe"""; StatusMsg: Removing native images...; Flags: runhidden;
Filename: {code:GetV4NetDir}ngen.exe; Parameters: "uninstall ""{#TargetDir}\Win3muRuntime.dll"""; StatusMsg: Removing native images...; Flags: runhidden;

[Messages]
WelcomeLabel1=Welcome to Win3mu!
WelcomeLabel2=
WinVersionTooLowError=This program requires a newer version of Windows
SetupWindowTitle=Install Win3mu

[Code]

procedure InitializeWizard(); 
var
  message: string;
begin 
    message := 'This will install Win3mu on your computer.' + #13#13;
  
    message := message + #13#13 + 'By continuing you are agreeing to the Win3mu license agreement. http://www.toptensoftware.com/win3mu/license';

    message := message + #13#13 + 'Version 0.1 Build ' + IntToStr({#BuildNumber});

    WizardForm.WelcomeLabel2.Caption := message;
end;

function IsDotNetDetected(version: string; service: cardinal): boolean;
// Indicates whether the specified version and service pack of the .NET Framework is installed.
//
// version -- Specify one of these strings for the required .NET Framework version:
//    'v1.1.4322'     .NET Framework 1.1
//    'v2.0.50727'    .NET Framework 2.0
//    'v3.0'          .NET Framework 3.0
//    'v3.5'          .NET Framework 3.5
//    'v4\Client'     .NET Framework 4.0 Client Profile
//    'v4\Full'       .NET Framework 4.0 Full Installation
//    'v4.5'          .NET Framework 4.5
//
// service -- Specify any non-negative integer for the required service pack level:
//    0               No service packs required
//    1, 2, etc.      Service pack 1, 2, etc. required
var
    key: string;
    install, release, serviceCount: cardinal;
    check45, success: boolean;
begin
    // .NET 4.5 installs as update to .NET 4.0 Full
    if version = 'v4.5' then begin
        version := 'v4\Full';
        check45 := true;
    end else
        check45 := false;

    // installation key group for all .NET versions
    key := 'SOFTWARE\Microsoft\NET Framework Setup\NDP\' + version;

    // .NET 3.0 uses value InstallSuccess in subkey Setup
    if Pos('v3.0', version) = 1 then begin
        success := RegQueryDWordValue(HKLM, key + '\Setup', 'InstallSuccess', install);
    end else begin
        success := RegQueryDWordValue(HKLM, key, 'Install', install);
    end;

    // .NET 4.0/4.5 uses value Servicing instead of SP
    if Pos('v4', version) = 1 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Servicing', serviceCount);
    end else begin
        success := success and RegQueryDWordValue(HKLM, key, 'SP', serviceCount);
    end;

    // .NET 4.5 uses additional value Release
    if check45 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Release', release);
        success := success and (release >= 378389);
    end;

    result := success and (install = 1) and (serviceCount >= service);
end;

function IsRequiredDotNetDetected(): Boolean;  
begin
    result := IsDotNetDetected('v4\Client', 0);
end;

function GetV4NetDir(version: string) : string;
var regkey, regval  : string;
begin

    // in case the target is 3.5, replace 'v4' with 'v3.5'
    // for other info, check out this link 
    // http://stackoverflow.com/questions/199080/how-to-detect-what-net-framework-versions-and-service-packs-are-installed
    regkey := 'SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Client'

    if IsWin64 then
      RegQueryStringValue(HKEY_LOCAL_MACHINE_64, regkey, 'InstallPath', regval)
    else
      RegQueryStringValue(HKEY_LOCAL_MACHINE, regkey, 'InstallPath', regval);

    result := regval;
end; 

/////////////////////////////////////////////////////////////////////
procedure UninstallOld(guid: String);
var
  sUnInstallString: String;
  sKey: String;
    iResultCode: Integer;
begin
  // Find uninstaller
  sKey := 'Software\Microsoft\Windows\CurrentVersion\Uninstall\' + guid + '_is1';
  if not RegQueryStringValue(HKEY_LOCAL_MACHINE_32, sKey, 'UninstallString', sUnInstallString) then
    if not RegQueryStringValue(HKEY_CURRENT_USER_32, sKey, 'UninstallString', sUnInstallString) then
      exit;

  // Run it
  sUnInstallString := RemoveQuotes(sUnInstallString);
  Exec(sUnInstallString, '/VERYSILENT /NORESTART /SUPPRESSMSGBOXES','', SW_HIDE, ewWaitUntilTerminated, iResultCode)
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
end;


function InitializeSetup(): Boolean;
begin
    if not IsRequiredDotNetDetected() then begin
        result := MsgBox('This program requires the Microsoft .NET Framework 4.0 (Client Profile).'#13#13
          'The installer will attempt to install it, but requires an internet connection. If this machine is not connected to the internet you''ll need to manually install it.'#13#13
          'Do you want to continue?', mbInformation, MB_YESNO) = IDYES
    end else begin
        result := true;
    end
end; 